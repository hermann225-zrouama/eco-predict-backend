name: eco-predict-backend-ci-dev

on:
  # Triggers the workflow on push or pull request events for branches starting with "dev-"
  push:
    branches: [ "dev-*" ]

  # Allows manual execution of the workflow from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout the code
        uses: actions/checkout@v4

      # Set up Docker to build and push the image
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eco-predict-backend:dev-${{ github.sha }} .

      # Push the Docker image to Docker Hub (or another registry)
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/eco-predict-backend:dev-${{ github.sha }}

  modifygit:
    needs: build
    runs-on: ubuntu-latest
    steps:
      # Checkout the repository from GitHub
      - uses: actions/checkout@v3
        name: Checkout the repository
        with:
          repository: 'hermann225-zrouama/eco-predict'  # Repository name

      # Modify the image in deployment.yaml
      - name: Modify the image in deployment.yaml
        run: |
          # Configure Git with a generic name and email (GitHub Actions bot)
          git config user.email "github-actions[bot]@users.noreply.github.com"
          git config user.name "github-actions[bot]"

          # Print current directory and contents for debugging
          echo "Current working directory:"
          pwd

          # Show the contents of deployment.yaml before changes
          echo "Contents of deployment.yaml before modification:"
          cat deployment.yaml

          # Modify the image in deployment.yaml with the correct image reference
          sed -i "s+image: .*$+image: ${DOCKER_USERNAME}/eco-predict-backend:dev-${GITHUB_SHA}+g" deployment.yaml

          # Show the contents of deployment.yaml after changes
          echo "Contents of deployment.yaml after modification:"
          cat deployment.yaml

          # Stage, commit, and push changes to the repository
          git add deployment.yaml
          git commit -m 'Updated image to ${{ secrets.DOCKER_USERNAME }}/eco-predict-backend:dev-${{ github.sha }} by GitHub Actions: Job changemanifest: ${{ github.run_number }}'
          git push origin main
        env:
          DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}  # Docker Hub username
          GITHUB_SHA: ${{ github.sha }}  # Current GitHub commit SHA
        # Authenticate using GitHub Token (no need for username/password)
      - name: Push changes
        uses: ad-m/github-push-action@v1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}  # Use GitHub token for authentication
