name: eco-predict-backend-ci-dev

on:
  # Triggers the workflow on push or pull request events for branches starting with "dev-"
  push:
    branches: [ "dev-*" ]

  # Allows manual execution of the workflow from the Actions tab
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository
      - name: Checkout the code
        uses: actions/checkout@v4

      # Set up Docker to build and push the image
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Build the Docker image
      - name: Build Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/eco-predict-backend:dev-${{ github.sha }} .

      # Push the Docker image to Docker Hub (or another registry)
      - name: Push Docker image
        run: |
          docker push ${{ secrets.DOCKER_USERNAME }}/eco-predict-backend:dev-${{ github.sha }}

# Deploy to the personal RKE2 cluster
  deploy:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.SSH_KEY_K8S }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.IP_K8S }} >> ~/.ssh/known_hosts

      - name: Deploy to RKE2 cluster via SSH
        run: |
          ssh -o StrictHostKeyChecking=no ${{ secrets.USERNAME_K8S }}@${{ secrets.IP_K8S }} << 'EOF'
            # Update the image in the deployment
            kubectl set image deployment/eco-predict-backend eco-predict-backend=${{ secrets.DOCKER_USERNAME }}/eco-predict-backend:dev-${{ github.sha }}

            # Apply the Kubernetes manifests
            kubectl apply -f k8s/dev/configmap.yaml
            kubectl apply -f k8s/dev/deployment.yaml
            kubectl apply -f k8s/dev/service.yaml
          EOF
